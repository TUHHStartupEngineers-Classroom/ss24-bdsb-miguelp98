{
  "hash": "c6c04cdf9651ebc55f54a4eb1d53f39e",
  "result": {
    "markdown": "---\ntitle: \"Data Acquisition\"\nauthor: \"Miguel Peñate Arrieta\"\ndate: \"2024-05-20\"\nformat:\n  html:\n    code-fold: true\n    self-contained: false\n---\n\n::: {.cell hash='02_data_acquisition_cache/html/plot_b376c3564c834b6c8eb2ac07ccdd0d3d'}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Your API Key for OpenWeatherMap\napi_key <- \"a256ad6d852c483510ecff0ed3518e2f\"\n\n# The city for which you want to get the weather data\ncity <- \"Madrid\"\n\n# Construct the request URL\nurl <- paste0(\"http://api.openweathermap.org/data/2.5/weather?q=\", city, \"&appid=\", api_key, \"&units=metric\")\n\n# Make the GET request\nresponse <- GET(url)\n\n# Check the status of the response\nif (status_code(response) == 200) {\n  # Parse the content of the response\n  weather_data <- fromJSON(content(response, as = \"text\", encoding = \"UTF-8\"))\n  \n  # Check the structure of the weather_data$weather object\n  str(weather_data$weather)\n  \n  # Extract relevant data\n  main_data <- weather_data$main\n  \n  # weather_data$weather is a list, access the first entry\n  weather_description <- weather_data$weather$description\n  \n  # Create a data frame with the data\n  weather_df <- data.frame(\n    City = city,\n    Temperature = main_data$temp,\n    Pressure = main_data$pressure,\n    Humidity = main_data$humidity,\n    Description = weather_description\n  )\n  \n  # Print the data in a readable format\n  print(weather_df)\n  \n  # Plot the temperature\n  ggplot(weather_df, aes(x = City, y = Temperature, color = Description)) +\n    geom_point(size = 5) +\n    theme_minimal() +\n    labs(title = paste(\"Temperature in\", city),\n         y = \"Temperature (°C)\",\n         x = \"City\")\n  \n} else {\n  print(\"Error in the API request\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> 'data.frame':\t1 obs. of  4 variables:\n#>  $ id         : int 801\n#>  $ main       : chr \"Clouds\"\n#>  $ description: chr \"few clouds\"\n#>  $ icon       : chr \"02d\"\n#>     City Temperature Pressure Humidity Description\n#> 1 Madrid       17.07     1001       46  few clouds\n```\n:::\n\n::: {.cell-output-display}\n![](02_data_acquisition_files/figure-html/plot-1.png){width=960}\n:::\n\n```{.r .cell-code}\n# CHALLENGE 2 ----\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.1\n#> ✔ lubridate 1.9.3     ✔ tibble    3.2.1\n#> ✔ purrr     1.0.2     ✔ tidyr     1.3.1\n#> ✔ readr     2.1.5     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter()  masks stats::filter()\n#> ✖ purrr::flatten() masks jsonlite::flatten()\n#> ✖ dplyr::lag()     masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(rvest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'rvest'\n#> \n#> The following object is masked from 'package:readr':\n#> \n#>     guess_encoding\n```\n:::\n\n```{.r .cell-code}\nlibrary(xopen)\nlibrary(readr)\nlibrary(scales)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'scales'\n#> \n#> The following object is masked from 'package:purrr':\n#> \n#>     discard\n#> \n#> The following object is masked from 'package:readr':\n#> \n#>     col_factor\n```\n:::\n\n```{.r .cell-code}\n# URL de la página principal de Rose Bikes con la correcta codificación para \"Fahrräder\"\nurl_home <- \"https://www.rosebikes.de/fahrr%C3%A4der\"\n#xopen(url_home) # Abre la URL en el navegador para inspección\nhtml_home <- read_html(url_home)\n\n# Obtener las URLs de las categorías de bicicletas\nbike_categories_chr <- html_home |>\n  html_elements(css = \".catalog-navigation__link\") |>\n  html_attr('href') |>\n  str_subset(pattern = \"sale|outlet|gear|customer-service\", negate = T) |>\n  str_c(\"https://www.rosebikes.de\", ... = _)\n\n# Imprimir las URLs de las categorías para verificar\nprint(bike_categories_chr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"https://www.rosebikes.de/fahrräder/gravel\"           \n#> [2] \"https://www.rosebikes.de/fahrräder/rennrad\"          \n#> [3] \"https://www.rosebikes.de/fahrräder/mtb\"              \n#> [4] \"https://www.rosebikes.de/fahrräder/urban-&-trekking\" \n#> [5] \"https://www.rosebikes.de/fahrräder/e-bike\"           \n#> [6] \"https://www.rosebikes.de/bike-finder\"                \n#> [7] \"https://www.rosebikes.de/bikes-mit-kurzer-lieferzeit\"\n```\n:::\n\n```{.r .cell-code}\n# Seleccionamos la primera categoría de bicicletas (Gravel)\nbike_category_url <- bike_categories_chr[1]\n\n# Obtener las URLs de los modelos de bicicletas para la categoría seleccionada\nhtml_bike_category <- read_html(bike_category_url)\n\nbike_url_chr <- html_bike_category |>\n  html_elements(css = \".catalog-navigation__list-item+ .catalog-navigation__list-item .catalog-navigation__link\") |>  # no vemos la de Alle\n  html_attr(\"href\") |>\n  str_c(\"https://www.rosebikes.de\", ... = _)\n\n# Imprimir las URLs de los modelos de bicicletas para verificar\nprint(bike_url_chr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"https://www.rosebikes.de/fahrräder/gravel/adventure\"\n#> [2] \"https://www.rosebikes.de/fahrräder/gravel/everyday\" \n#> [3] \"https://www.rosebikes.de/fahrräder/gravel/race\"     \n#> [4] \"https://www.rosebikes.de/fahrräder/gravel/e-gravel\"\n```\n:::\n\n```{.r .cell-code}\n# URL de la subcategoría Adventure\nurl_adventure <- bike_url_chr[1]  # Asumimos que \"Adventure\" es la primera subcategoría\n#xopen(url_adventure) # Abre la URL en el navegador para inspección\nhtml_adventure <- read_html(url_adventure)\n\n#Obtener los nombres de los modelos y los precios\nbike_names <- html_adventure |>\n  html_elements(css = \".basic-headline--left .basic-headline__title\") |>\n  html_text() |>\n  str_squish() # Limpiar texto\n\nbike_prices <- html_adventure |>\n  html_elements(css = \".catalog-category-bikes__price-title\") |>\n  html_text() |>\n  str_squish() |>\n  str_remove(\"^ab\")\n\n# Crear un data frame con los nombres y precios\nbike_data <- tibble(\n  Model = bike_names,\n  Price = bike_prices\n)\n\n# Imprimir el data frame\nprint(bike_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 3 × 2\n#>   Model            Price        \n#>   <chr>            <chr>        \n#> 1 BACKROAD AL      \" 1.999,00 €\"\n#> 2 BACKROAD         \" 2.999,00 €\"\n#> 3 BACKROAD LIMITED \" 4.449,00 €\"\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}