{
  "hash": "f0f01bc29a5a03be3efb8b05705c6222",
  "result": {
    "markdown": "---\ntitle: \"Tidyverse\"\nauthor: \"Miguel Peñate\"\ndate: \"2024-05-19\"\nformat:\n  html:\n    code-fold: true\n    self-contained: false\n---\n\n::: {.cell hash='01_tidyverse_cache/html/plot_c4bbffcbc2d38b7eef85dd7b48dbf9a8'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(scales)\nlibrary(lubridate)\nlibrary(here)\n\n# Build the relatives routes in the file .qmd\nbikes_path <- here::here(\"01_raw_data\", \"bikes.xlsx\")\norderlines_path <- here::here(\"01_raw_data\", \"orderlines.xlsx\")\nbikeshops_path <- here::here(\"01_raw_data\", \"bikeshops.xlsx\")\n\n# Load the data using the relatives routes\nbikes_tbl <- read_excel(bikes_path)\norderlines_tbl <- read_excel(orderlines_path)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> New names:\n#> • `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nbikeshops_tbl <- read_excel(bikeshops_path)\n\n# Join the tables\nbike_orderlines_joined_tbl <- orderlines_tbl %>%\n  left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %>%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\n\n# Manipulate the data\nbike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>%\n  separate(col = category, into = c(\"category.1\", \"category.2\", \"category.3\"), sep = \" - \") %>%\n  mutate(total.price = price * quantity) %>%\n  select(-...1, -gender) %>%\n  select(-ends_with(\".id\")) %>%\n  bind_cols(bike_orderlines_joined_tbl %>% select(order.id)) %>%\n  select(order.id, contains(\"order\"), contains(\"model\"), contains(\"category\"),\n         price, quantity, total.price, everything()) %>%\n  rename(bikeshop = name) %>%\n  set_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n\n# Separar ubicación en ciudad y estado\nbike_orderlines_wrangled_tbl <- bike_orderlines_wrangled_tbl %>%\n  separate(col = location, into = c(\"city\", \"state\"), sep = \", \")\n\n# Create table\nsales_by_loc_tbl <- bike_orderlines_wrangled_tbl %>%\n  group_by(state) %>%\n  summarize(sales = sum(total_price)) %>%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\n# Visualize with ggplot2\nggplot(sales_by_loc_tbl, aes(x = reorder(state, -sales), y = sales)) +\n  geom_col(fill = \"#2DC6D6\") +\n  geom_label(aes(label = sales_text)) +\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by State\",\n    subtitle = \"Total revenue by state\",\n    x = \"State\",\n    y = \"Revenue\"\n  ) + theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/plot-1.png){width=960}\n:::\n\n```{.r .cell-code}\n# TASK 2: create table location and year\nsales_by_year_loc_tbl <- bike_orderlines_wrangled_tbl %>%\n  mutate(year = year(order_date)) %>%\n  group_by(state, year) %>%\n  summarize(sales = sum(total_price), .groups = 'drop') %>%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\n# Visualizar ventas por ubicación y año\nsales_by_year_loc_tbl %>%\n  ggplot(aes(x = year, y = sales, fill = state)) +\n  geom_col() +\n  geom_label(aes(label = sales_text)) +\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by Year and State\",\n    subtitle = \"Total revenue by year and state\",\n    x = \"Year\",\n    y = \"Revenue\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  facet_wrap(~ state, scales = \"free_y\")\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/plot-2.png){width=960}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}